language: cpp

# define OS and compiler variations to be tested
matrix:
  include:
    - os: linux
      dist: trusty
      sudo: required
      compiler: gcc
      addons:
        apt:
          packages: ['libtbb-dev', 'doxygen', 'libgtest-dev', 'libboost-all-dev']
      env: COMPILER=g++

    - os: linux
      dist: trusty
      sudo: required
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-5', 'gcc-5', 'libtbb-dev', 'doxygen', 'libgtest-dev', 'libboost-all-dev']
      env: COMPILER=g++-5

    - os: linux
      dist: trusty
      sudo: required
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-6', 'libtbb-dev', 'doxygen', 'libgtest-dev', 'libboost-all-dev']
      env: COMPILER=g++-6

    - os: linux
      dist: trusty
      sudo: required
      compiler: clang
      addons:
        apt:
          packages: ['libtbb-dev', 'doxygen', 'libgtest-dev', 'libboost-all-dev']
      env: COMPILER=clang++

    - os: linux
      dist: trusty
      sudo: required
      compiler: clang
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          - sourceline: deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-3.9 main
            key_url: http://apt.llvm.org/llvm-snapshot.gpg.key
          packages: ['clang-3.9', 'libtbb-dev', 'doxygen', 'libgtest-dev', 'libboost-all-dev']
      env: COMPILER=clang++-3.9

    - os: osx
      osx_image: xcode7.3
      compiler: clang
      env: COMPILER=clang++
      
    - os: osx
      osx_image: xcode8
      compiler: clang
      env: COMPILER=clang++

#  allow_failures:
#    - os: osx

before_script:
  # install OSX packages
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew tap homebrew/versions && brew update && brew install tbb doxygen python3 boost --with-python; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then ls -al /usr/local/Cellar/boost; fi
  # - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export BOOST_ROOT=/usr/local/Cellar/boost/1.60.0_2; fi
  # modify PATH
  - mkdir ~/bin && export PATH=$PATH:~/Library/Python/3.5/bin:~/bin
  # install the meson build system for the local travis user and create a symlink
  - pip3 install --user meson
  # install a recent ninja binary from sources
  - git clone -b master https://github.com/ninja-build/ninja.git --single-branch --depth 1
  - cd ninja && ./configure.py --bootstrap && mv ninja ~/bin && cd ..
  
script:
  # setup the meson build and configure
  - mkdir build
  - CXX=$COMPILER CXXFLAGS=$COMPILER_FLAGS LDFLAGS=$LINKER_FLAGS meson.py build
  # build with ninja
  - cd build
  - ninja -v
  # build and execute unit tests
  - ninja test
